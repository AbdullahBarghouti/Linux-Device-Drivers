Abdullah Barghouti 
ECE 373 
HW1

1.
A. Information Gathering
1a)
- When calling open(), its currently imporssible to enable signal-driver by specifying O_ASYNC.
- When trying to determine if the kernel supports O_TMPFILE functiobality, two error codes, EISDIR and ENOENT must be checked.
- In the case O_CREAT and O_DIRECTORY are both specified in flags, and the file specified by pathname does not exist, open() will create a regular file.

1b) sys/types.h, sys.stat.h, fcntl.h

1c) chmod(), chown(), close()

1d) chmod() doesnt seem to have any bugs listed in the manual pages. It requires sys/stat.h to be used.

 
2a) The struct "usb_device" is defined in usb.h. The first 5 members are: devnum, devpath[16], route, state, and speed.

2b) the type decleration for speed can be found in include/uapi/linux/usb/ch9.h

2c) 
/* USB 2.0 defines three speeds, here's how Linux identifies them */

enum usb_device_speed {
	USB_SPEED_UNKNOWN = 0,			/* enumerating */
	USB_SPEED_LOW, USB_SPEED_FULL,		/* usb 1.1 */
	USB_SPEED_HIGH,				/* usb 2.0 */
	USB_SPEED_WIRELESS,			/* wireless (usb 2.5) */
	USB_SPEED_SUPER,			/* usb 3.0 */
	USB_SPEED_SUPER_PLUS,			/* usb 3.1 */
};


2.
Version: V5.0.7
Lines 633-712
From file 'include/linux/usb.h'
CODE:
struct usb_device {
	int		devnum;
	char		devpath[16];
	u32		route;
	enum usb_device_state	state;
	enum usb_device_speed	speed;
	unsigned int		rx_lanes;
	unsigned int		tx_lanes;

	struct usb_tt	*tt;
	int		ttport;

	unsigned int toggle[2];

	struct usb_device *parent;
	struct usb_bus *bus;
	struct usb_host_endpoint ep0;

	struct device dev;

	struct usb_device_descriptor descriptor;
	struct usb_host_bos *bos;
	struct usb_host_config *config;

	struct usb_host_config *actconfig;
	struct usb_host_endpoint *ep_in[16];
	struct usb_host_endpoint *ep_out[16];

	char **rawdescriptors;

	unsigned short bus_mA;
	u8 portnum;
	u8 level;

	unsigned can_submit:1;
	unsigned persist_enabled:1;
	unsigned have_langid:1;
	unsigned authorized:1;
	unsigned authenticated:1;
	unsigned wusb:1;
	unsigned lpm_capable:1;
	unsigned usb2_hw_lpm_capable:1;
	unsigned usb2_hw_lpm_besl_capable:1;
	unsigned usb2_hw_lpm_enabled:1;
	unsigned usb2_hw_lpm_allowed:1;
	unsigned usb3_lpm_u1_enabled:1;
	unsigned usb3_lpm_u2_enabled:1;
	int string_langid;

	/* static strings from the device */
	char *product;
	char *manufacturer;
	char *serial;

	struct list_head filelist;

	int maxchild;

	u32 quirks;
	atomic_t urbnum;

	unsigned long active_duration;

#ifdef CONFIG_PM
	unsigned long connect_time;

	unsigned do_remote_wakeup:1;
	unsigned reset_resume:1;
	unsigned port_is_suspended:1;
#endif
	struct wusb_dev *wusb_dev;
	int slot_id;
	enum usb_device_removable removable;
	struct usb2_lpm_parameters l1_params;
	struct usb3_lpm_parameters u1_params;
	struct usb3_lpm_parameters u2_params;
	unsigned lpm_disable_count;

	u16 hub_delay;
};

3. C code from section C

#include <stdio.h>

int main()
{
int inputValue;
printf("Enter a integer value: ");
scanf("%d",&inputValue);
printf("the integer value you entered is %d.\n", inputValue);

return 0;
}

4. C code typescript from section C

Script started on Sat 13 Apr 2019 04:34:01 PM PDT
abdullahbarghouti@ubuntu:~/Desktop/Parallels Shared Folders/Home/Desktop/ECE373/Homework/HW1$ ls
ECE373.pdf  Homework1.txt  simpleC.c  typescript  typescript.txt
abdullahbarghouti@ubuntu:~/Desktop/Parallels Shared Folders/Home/Desktop/ECE373/Homework/HW1$ gcc -g -o simpleC simpleC.c
abdullahbarghouti@ubuntu:~/Desktop/Parallels Shared Folders/Home/Desktop/ECE373/Homework/HW1$ ./simpleC 
Enter a integer value: 12
the integer value you entered is 12.
abdullahbarghouti@ubuntu:~/Desktop/Parallels Shared Folders/Home/Desktop/ECE373/Homework/HW1$ exit
exit

Script done on Sat 13 Apr 2019 04:36:21 PM PDT

5. hello.c module code from section D

#include <linux/module.h>
#include <linux/types.h>
MODULE_LICENSE("Dual BSD/GPL");
static int __init hello_init(void)
{
	printk(KERN_INFO "hello kernel!\n");
	return 0;
}

static void __exit hello_exit(void)
{
	printk(KERN_INFO "goodbye kernel!\n");
}
module_init(hello_init);
module_exit(hello_exit);

6. 'hello' and 'goodbye' logfile lines from section D

[  181.577490] hello kernel!
[  365.108939] goodbye kernel!
